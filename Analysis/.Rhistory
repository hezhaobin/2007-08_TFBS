	}#
	theory <- function(x) 2/x*choose(samp.size, i)*x^(i)*(1-x)^(samp.size-i)#
	samp.theory[i] <- samp.theory[i] + (integrate(theory, 0, 1))$val#
}#
t <- samp.theory/sum(samp.theory)#
	#
theory <- 1/1:200#
theory <- theory/sum(theory)#
plot(freq[c(1:20, 21+(1:18)*10)], xlab = 'Allele frequency', ylab = 'frequency')#
lines(theory*sum(freq))#
chisq.test(freq[2:201], p=theory)
##DRIFT, no selection no mutation model###
N <- 200#
#
freq <- rep(0, N+1)#
#
for(i in 1:1000){#
	p = 1#
	while(p != 0 && p != N){#
		#plot(freq)#
		p <- rbinom(1, N, p/N)#
		freq[p+1] <- freq[p+1] + 1#
	}#
}#
#
dens <- freq/sum(freq)#
samp.size <- 50#
samp <- rep(0,samp.size-1)#
samp.theory <- rep(0, samp.size-1)#
for (i in 1:(samp.size-1)){#
	for(j in 1:(N-1)){#
		samp[i] <- samp[i] + choose(samp.size, i)*(j/N)^i*(1-(j/N))^(samp.size-i)*dens[j+1]#
	}#
	theory <- function(x) 2/x*choose(samp.size, i)*x^(i)*(1-x)^(samp.size-i)#
	samp.theory[i] <- samp.theory[i] + (integrate(theory, 0, 1))$val#
}#
t <- samp.theory/sum(samp.theory)#
	#
theory <- 1/1:200#
theory <- theory/sum(theory)#
plot(freq[c(1:20, 21+(1:18)*10)], xlab = 'Allele frequency', ylab = 'frequency')#
lines(theory*sum(freq))#
chisq.test(freq[2:201], p=theory)
title(main = "No mutation/selection \n circle--simulation; line-- theory")
plot(freq)
plot(samp)
points(1:49, t, pch = 24)
plot(samp, xlab = "ith site", ylab = "frequency")
points(1:49, t, pch = 24)
title(main = "Sampling distribution \n circle--from simulated distribution; triangle-- from theory predicted distribution")
plot(samp, xlab = "ith site", ylab = "frequency")
points(1:49, t, pch = 24)
title(main = "Sampling distribution \n circle--from simulated distribution; \ntriangle-- from theory predicted distribution")
e^2
##selection, h=1/2, 2Ns = 50 or -20, N = 1000###
N <- 2000#
h <- .5#
alpha <- 50#
s <- alpha/N#
w11 = 1#
w12 = 1-s*h#
w22 = 1-s#
freq <- rep(0, N+1)#
for(i in 1:1000){#
	p = 1#
	while(p != 0 && p!= N){#
		p1 = p/N#
		wbar=p1^2+2.0*p1*(1.0-p1)*w12+(1.0-p1)*(1.0-p1)*w22#
		pstar <- (p1^2 + p1*(1.0-p1)*w12)/wbar#
		p <- rbinom(1, N, pstar)#
		##plot(freq)#
		freq[p+1] <- freq[p+1] + 1#
	}#
}#
dens <- freq/sum(freq)#
samp.size <- 50#
samp <- rep(0,samp.size-1)#
samp.theory <- rep(0, samp.size-1)#
for (i in 1:(samp.size-1)){#
	for(j in 1:(N-1)){#
		samp[i] <- samp[i] + choose(samp.size, i)*(j/N)^i*(1-(j/N))^(samp.size-i)*dens[j+1]#
	}#
	theory <- function(x)  2.*(1 - exp(-alpha*(1 - x)))/( x*(1 - x)*(1 - exp(-alpha)))*choose(samp.size, i)*x^(i)*(1-x)^(samp.size-i)#
	samp.theory[i] <- samp.theory[i] + (integrate(theory, 0, 1))$val#
}#
t <- samp.theory/sum(samp.theory)#
	#
theory <- 1/1:N#
theory <- theory/sum(theory)#
plot(freq[c(1:50, 51+(1:150)*10)], xlab = 'Allele frequency', ylab = 'frequency')#
lines(theory*sum(freq))#
chisq.test(freq[2:2001], p=theory)
freq
plot(freq)
plot(freq[c(1:50, 51+(1:150)*10)], xlab = 'Allele frequency', ylab = 'frequency')
plot(freq, xlab = 'Allele frequency', ylab = 'frequency')#
lines(theory*sum(freq))
plot(samp)
plot(t)
plot(samp,t)
plot(samp)
points(1:49, t, pch=24)
title(main="2Ns = 50 \n circle--simulation\n triangle--theory")
##selection, h=1/2, 2Ns = 50 or -20, N = 1000###
N <- 2000#
h <- .5#
alpha <- -20#
s <- alpha/N#
w11 = 1#
w12 = 1-s*h#
w22 = 1-s#
freq <- rep(0, N+1)#
for(i in 1:1000){#
	p = 1#
	while(p != 0 && p!= N){#
		p1 = p/N#
		wbar=p1^2+2.0*p1*(1.0-p1)*w12+(1.0-p1)*(1.0-p1)*w22#
		pstar <- (p1^2 + p1*(1.0-p1)*w12)/wbar#
		p <- rbinom(1, N, pstar)#
		##plot(freq)#
		freq[p+1] <- freq[p+1] + 1#
	}#
}#
dens <- freq/sum(freq)#
samp.size <- 50#
samp <- rep(0,samp.size-1)#
samp.theory <- rep(0, samp.size-1)#
for (i in 1:(samp.size-1)){#
	for(j in 1:(N-1)){#
		samp[i] <- samp[i] + choose(samp.size, i)*(j/N)^i*(1-(j/N))^(samp.size-i)*dens[j+1]#
	}#
	theory <- function(x)  2.*(1 - exp(-alpha*(1 - x)))/( x*(1 - x)*(1 - exp(-alpha)))*choose(samp.size, i)*x^(i)*(1-x)^(samp.size-i)#
	samp.theory[i] <- samp.theory[i] + (integrate(theory, 0, 1))$val#
}#
t <- samp.theory/sum(samp.theory)
plot(samp)
points(1:49, t, pch=24)
title(main="2Ns = -20 \n circle--simulation\n triangle--theory")
##selection, h=1/2, 2Ns = 50 or -20, N = 1000###
N <- 2000#
h <- .5#
alpha <- -20#
s <- alpha/N#
w11 = 1#
w12 = 1-s*h#
w22 = 1-s#
freq <- rep(0, N+1)#
for(i in 1:1000){#
	p = 1#
	while(p != 0 && p!= N){#
		p1 = p/N#
		wbar=p1^2+2.0*p1*(1.0-p1)*w12+(1.0-p1)*(1.0-p1)*w22#
		pstar <- (p1^2 + p1*(1.0-p1)*w12)/wbar#
		p <- rbinom(1, N, pstar)#
		##plot(freq)#
		freq[p+1] <- freq[p+1] + 1#
	}#
}#
dens <- freq/sum(freq)#
samp.size <- 50#
samp <- rep(0,samp.size-1)#
samp.theory <- rep(0, samp.size-1)#
for (i in 1:(samp.size-1)){#
	for(j in 1:(N-1)){#
		samp[i] <- samp[i] + choose(samp.size, i)*(j/N)^i*(1-(j/N))^(samp.size-i)*dens[j+1]#
	}#
	theory <- function(x)  2.*(1 - exp(-alpha*(1 - x)))/( x*(1 - x)*(1 - exp(-alpha)))*choose(samp.size, i)*x^(i)*(1-x)^(samp.size-i)#
	samp.theory[i] <- samp.theory[i] + (integrate(theory, 0, 1))$val#
}#
t <- samp.theory/sum(samp.theory)#
plot(samp, xlab='ith site', ylab='frequency')#
points(1:49, t, pch=24)#
title(main='2Ns = -20 \n circle--simulation \n triangle--theory')
##selection, h=1/2, 2Ns = 50 or -20, N = 1000###
N <- 2000#
h <- .5#
alpha <- -20#
s <- alpha/N#
w11 = 1#
w12 = 1-s*h#
w22 = 1-s#
freq <- rep(0, N+1)#
for(i in 1:1000){#
	p = 1#
	while(p != 0 && p!= N){#
		p1 = p/N#
		wbar=p1^2+2.0*p1*(1.0-p1)*w12+(1.0-p1)*(1.0-p1)*w22#
		pstar <- (p1^2 + p1*(1.0-p1)*w12)/wbar#
		p <- rbinom(1, N, pstar)#
		##plot(freq)#
		freq[p+1] <- freq[p+1] + 1#
	}#
}#
dens <- freq/sum(freq)#
samp.size <- 20#
samp <- rep(0,samp.size-1)#
samp.theory <- rep(0, samp.size-1)#
for (i in 1:(samp.size-1)){#
	for(j in 1:(N-1)){#
		samp[i] <- samp[i] + choose(samp.size, i)*(j/N)^i*(1-(j/N))^(samp.size-i)*dens[j+1]#
	}#
	theory <- function(x)  2.*(1 - exp(-alpha*(1 - x)))/( x*(1 - x)*(1 - exp(-alpha)))*choose(samp.size, i)*x^(i)*(1-x)^(samp.size-i)#
	samp.theory[i] <- samp.theory[i] + (integrate(theory, 0, 1))$val#
}#
t <- samp.theory/sum(samp.theory)#
plot(samp, xlab='ith site', ylab='frequency')#
points(1:49, t, pch=24)#
title(main='2Ns = -20 \n circle--simulation \n triangle--theory')
##selection, h=1/2, 2Ns = 50 or -20, N = 1000###
N <- 2000#
h <- .5#
alpha <- -20#
s <- alpha/N#
w11 = 1#
w12 = 1-s*h#
w22 = 1-s#
freq <- rep(0, N+1)#
for(i in 1:1000){#
	p = 1#
	while(p != 0 && p!= N){#
		p1 = p/N#
		wbar=p1^2+2.0*p1*(1.0-p1)*w12+(1.0-p1)*(1.0-p1)*w22#
		pstar <- (p1^2 + p1*(1.0-p1)*w12)/wbar#
		p <- rbinom(1, N, pstar)#
		##plot(freq)#
		freq[p+1] <- freq[p+1] + 1#
	}#
}#
dens <- freq/sum(freq)#
samp.size <- 20#
samp <- rep(0,samp.size-1)#
samp.theory <- rep(0, samp.size-1)#
for (i in 1:(samp.size-1)){#
	for(j in 1:(N-1)){#
		samp[i] <- samp[i] + choose(samp.size, i)*(j/N)^i*(1-(j/N))^(samp.size-i)*dens[j+1]#
	}#
	theory <- function(x)  2.*(1 - exp(-alpha*(1 - x)))/( x*(1 - x)*(1 - exp(-alpha)))*choose(samp.size, i)*x^(i)*(1-x)^(samp.size-i)#
	samp.theory[i] <- samp.theory[i] + (integrate(theory, 0, 1))$val#
}#
t <- samp.theory/sum(samp.theory)#
plot(samp, xlab='ith site', ylab='frequency')#
points(1:(samp.size-1), t, pch=24)#
title(main='2Ns = -20 \n circle--simulation \n triangle--theory')
##selection, h=1/2, 2Ns = 50 or -20, N = 1000###
N <- 2000#
h <- .5#
alpha <- -20#
s <- alpha/N#
w11 = 1#
w12 = 1-s*h#
w22 = 1-s#
freq <- rep(0, N+1)#
for(i in 1:1000){#
	p = 1#
	while(p != 0 && p!= N){#
		p1 = p/N#
		wbar=p1^2+2.0*p1*(1.0-p1)*w12+(1.0-p1)*(1.0-p1)*w22#
		pstar <- (p1^2 + p1*(1.0-p1)*w12)/wbar#
		p <- rbinom(1, N, pstar)#
		##plot(freq)#
		freq[p+1] <- freq[p+1] + 1#
	}#
}#
dens <- freq/sum(freq)#
samp.size <- 20#
samp <- rep(0,samp.size-1)#
samp.theory <- rep(0, samp.size-1)#
for (i in 1:(samp.size-1)){#
	for(j in 1:(N-1)){#
		samp[i] <- samp[i] + choose(samp.size, i)*(j/N)^i*(1-(j/N))^(samp.size-i)*dens[j+1]#
	}#
	theory <- function(x)  2.*(1 - exp(-alpha*(1 - x)))/( x*(1 - x)*(1 - exp(-alpha)))*choose(samp.size, i)*x^(i)*(1-x)^(samp.size-i)#
	samp.theory[i] <- samp.theory[i] + (integrate(theory, 0, 1))$val#
}#
t <- samp.theory/sum(samp.theory)#
plot(samp[5:(samp.size-1)], xlab='ith site', ylab='frequency')#
points(5:(samp.size-1), t, pch=24)#
title(main='2Ns = -20 \n circle--simulation \n triangle--theory')
##selection, h=1/2, 2Ns = 50 or -20, N = 1000###
N <- 2000#
h <- .5#
alpha <- -20#
s <- alpha/N#
w11 = 1#
w12 = 1-s*h#
w22 = 1-s#
freq <- rep(0, N+1)#
for(i in 1:1000){#
	p = 1#
	while(p != 0 && p!= N){#
		p1 = p/N#
		wbar=p1^2+2.0*p1*(1.0-p1)*w12+(1.0-p1)*(1.0-p1)*w22#
		pstar <- (p1^2 + p1*(1.0-p1)*w12)/wbar#
		p <- rbinom(1, N, pstar)#
		##plot(freq)#
		freq[p+1] <- freq[p+1] + 1#
	}#
}#
dens <- freq/sum(freq)#
samp.size <- 20#
samp <- rep(0,samp.size-1)#
samp.theory <- rep(0, samp.size-1)#
for (i in 1:(samp.size-1)){#
	for(j in 1:(N-1)){#
		samp[i] <- samp[i] + choose(samp.size, i)*(j/N)^i*(1-(j/N))^(samp.size-i)*dens[j+1]#
	}#
	theory <- function(x)  2.*(1 - exp(-alpha*(1 - x)))/( x*(1 - x)*(1 - exp(-alpha)))*choose(samp.size, i)*x^(i)*(1-x)^(samp.size-i)#
	samp.theory[i] <- samp.theory[i] + (integrate(theory, 0, 1))$val#
}#
t <- samp.theory/sum(samp.theory)#
plot(samp[5:(samp.size-1)], xlab='ith site', ylab='frequency')#
points(5:(samp.size-1), t[5:(samp.size-1)], pch=24)#
title(main='2Ns = -20 \n circle--simulation \n triangle--theory')
#
##selection, h=1/2, 2Ns = 50 or -20, N = 1000###
N <- 2000#
h <- .5#
alpha <- -20#
s <- alpha/N#
w11 = 1#
w12 = 1-s*h#
w22 = 1-s#
freq <- rep(0, N+1)#
for(i in 1:1000){#
	p = 1#
	while(p != 0 && p!= N){#
		p1 = p/N#
		wbar=p1^2+2.0*p1*(1.0-p1)*w12+(1.0-p1)*(1.0-p1)*w22#
		pstar <- (p1^2 + p1*(1.0-p1)*w12)/wbar#
		p <- rbinom(1, N, pstar)#
		##plot(freq)#
		freq[p+1] <- freq[p+1] + 1#
	}#
}#
dens <- freq/sum(freq)#
samp.size <- 20#
samp <- rep(0,samp.size-1)#
samp.theory <- rep(0, samp.size-1)#
for (i in 1:(samp.size-1)){#
	for(j in 1:(N-1)){#
		samp[i] <- samp[i] + choose(samp.size, i)*(j/N)^i*(1-(j/N))^(samp.size-i)*dens[j+1]#
	}#
	theory <- function(x)  2.*(1 - exp(-alpha*(1 - x)))/( x*(1 - x)*(1 - exp(-alpha)))*choose(samp.size, i)*x^(i)*(1-x)^(samp.size-i)#
	samp.theory[i] <- samp.theory[i] + (integrate(theory, 0, 1))$val#
}#
t <- samp.theory/sum(samp.theory)#
plot(samp, xlab='ith site', ylab='frequency')#
points(1:(samp.size-1), t, pch=24)#
title(main='2Ns = -20 \n circle--simulation \n triangle--theory')
##selection, h=1/2, 2Ns = 50 or -20, N = 1000###
N <- 2000#
h <- .1#
alpha <- 50#
s <- alpha/N#
w11 = 1#
w12 = 1-s*h#
w22 = 1-s#
freq <- rep(0, N+1)#
for(i in 1:1000){#
	p = 1#
	while(p != 0 && p!= N){#
		p1 = p/N#
		wbar=p1^2+2.0*p1*(1.0-p1)*w12+(1.0-p1)*(1.0-p1)*w22#
		pstar <- (p1^2 + p1*(1.0-p1)*w12)/wbar#
		p <- rbinom(1, N, pstar)#
		##plot(freq)#
		freq[p+1] <- freq[p+1] + 1#
	}#
}#
dens <- freq/sum(freq)#
samp.size <- 20#
samp <- rep(0,samp.size-1)#
samp.theory <- rep(0, samp.size-1)#
for (i in 1:(samp.size-1)){#
	for(j in 1:(N-1)){#
		samp[i] <- samp[i] + choose(samp.size, i)*(j/N)^i*(1-(j/N))^(samp.size-i)*dens[j+1]#
	}#
	theory <- function(x)  2.*(1 - exp(-alpha*(1 - x)))/( x*(1 - x)*(1 - exp(-alpha)))*choose(samp.size, i)*x^(i)*(1-x)^(samp.size-i)#
	samp.theory[i] <- samp.theory[i] + (integrate(theory, 0, 1))$val#
}#
t <- samp.theory/sum(samp.theory)#
plot(samp, xlab='ith site', ylab='frequency')#
points(1:(samp.size-1), t, pch=24)#
title(main='2Ns = -20 \n circle--simulation \n triangle--theory')
ls
plot(y=x^2)
plot(y~x)
y <- function(x) x^2
y
y(3)
plot([1:10], y)
[1:10]
(1:10}
(1:10)
plot((0:10), y)
plot((0:10), y(0:10))
lines((0:10), y(0:10))
lines((0,10), y(0,10))
y <- function(x) 1/(x+5)
lines((0,10), y(0,10))
lines((0:10), y(0:10))
plot()
lines((0:10), y(0:10))
plot((0:10), y(0:10))
y <- function(x) x/(x+5)
plot((0:10), y(0:10))
plot((0:100), y(0:100))
library{alr3}
library
library(alr3)
data(wtht)
data(htwt)
lm <- lm(Wt~Ht)
attach(htwt)
lm <- lm(Wt~Ht)
summary(lm)
x <- 1
x
x <- c(1:30)
x
x = c(1:30)
x
plot(x)
hist(x)
x = c(1:20, rep(3,20))
x
hist(x)
library(RMySQL)
?install
help.search("install")
install.packages("RMySQL")
library(RMySQL)
myCon <- dbConnect("MySQL", host = "turissinig5.uchicago.edu", user ="hebin", password = "fruitfly", dbname = "hebin")
sample_df <- dbGetQuery(myCon, "select * from tfbs limit 10")
hist(sample_df)
sample_df
year <- c(1992, 1994, 1996, 1997, 1998, 1998, 1998, 1999, 2000, 2001, 2001, 2002, 2002, 2002, 2003, 2003, 2003, 2003, 2003, 2003, 2004, 2004, 2007, 2006, 2006, 2006, 2005, 2005, 2005, 2005, 2004, 2004, 2004, 2003, 2002, 2002, 2002, 2002, 2001, 2000, 2000, 1998, 1997, 1994, 1989, 2000, 2000, 2000, 1999, 1998, 1998, 1997, 1997, 1995, 1993, 1992, 1991, 1990, 1998, 1998, 1995, 1994, 1991, 1991, 1993, 1991, 1991, 1991, 1991, 1990, 1989, 1986, 2008, 2007, 2007, 2006, 2006, 2006, 2005, 2004, 2002, 2002, 2001, 2000, 1999, 1999, 1998, 1997, 1997, 1994, 1993, 1993, 1992, 1990, 2000, 1999, 1999, 1998, 1998, 1998,1997, 1996, 1996, 1995, 1992, 2002, 2002, 2001, 2001, 2001, 2000, 2000, 1999, 1998, 1996, 1994, 1992, 1991, 2002, 1999, 1994, 1994, 1994, 1993, 1990, 1990, 1989, 1987, 1984, 1983, 1982, 1980, 1976, 1975, 1975, 1974, 1971, 1971, 1970, 1967, 1966, 2005, 2005, 2004, 2004, 2001, 2001, 1998, 1996, 1994, 1994, 1993, 1993, 1992, 1992, 1992, 1987, 1987)
hist(year)
hist(year, br=18)
hist(year, br=18, xlab='year', ylab='publications', main='publication number through years')
library(RMySQL)#
myCon <- dbConnect("MySQL", host = "turissinig5.uchicago.edu", user =#
"hebin", password = "fruitfly", dbname = "hebin")
install.packages(RMySQL)
install.packages("RMySQL")
library(RMySQL)#
myCon <- dbConnect("MySQL", host = "turissinig5.uchicago.edu", user =#
"hebin", password = "fruitfly", dbname = "hebin")
install.packages("RMySQL")
library(RMySQL)#
myCon <- dbConnect("MySQL", host = "turissinig5.uchicago.edu", user =#
"hebin", password = "fruitfly", dbname = "hebin")
fp <- dbGetQuery(myCon, "select (fp_end-fp_start+1) fp from tfbs")
fp
hist(fp)
names(fp)
fp$fp
hist(fp$fp)
sum(fp$fp)
bs <- dbGetQuery(myCon, "select (tfbs_end-tfbs_start+1) tfbs from tfbs where tfbs_score is not NULL")
hist(bs$bs)
hist(bs$tfbs)
bs
sum(bs$tfbs)
a <- c(0.2,0.4, 0.6, 0.8, 1.0, 1.2, 1.6)
b <- c(21/653, 34/1233, 31/1235, 25/852, 12/837, 26/1069, 3/239)
plot(b~a, xlab = 'Information Content', ylab = 'Divergence')
lines(b~a)
